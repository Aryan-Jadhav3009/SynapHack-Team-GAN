# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - Synaphack

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build Next.js application
        run: npm run build
        env:
          AZURE_SQL_CONNECTION_STRING: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          AZURE_STORAGE_CONTAINER: ${{ secrets.AZURE_STORAGE_CONTAINER }}
          AZURE_SIGNALR_CONNECTION_STRING: ${{ secrets.AZURE_SIGNALR_CONNECTION_STRING }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Create deployment package
        run: |
          mkdir deployment-package
          cp -r .next deployment-package/
          cp -r public deployment-package/
          cp package*.json deployment-package/
          cp -r prisma deployment-package/
          cp -r scripts deployment-package/
          # Copy other necessary files
          find . -name "*.js" -o -name "*.ts" -o -name "*.json" | grep -E "(next\.config|middleware)" | xargs -I {} cp {} deployment-package/ 2>/dev/null || true

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deployment-package

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_47C753180A7B48E4B376799F1A4903FB }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_63023E8E8F7849FBBEE125C5D244D971 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_5ADB900B2C4B4CA6AC1504895F330EA4 }}
          auth-type: IDENTITY


      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Synaphack'
          slot-name: 'Production'
          package: .




